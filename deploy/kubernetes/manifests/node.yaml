#TODO: Force DaemonSet to not run on master.
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: gcp-filestore-csi-node
  namespace: gcp-filestore-csi-driver
spec:
  selector:
    matchLabels:
      app: gcp-filestore-csi-driver
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: gcp-filestore-csi-driver
    spec:
      serviceAccount: gcp-filestore-csi-node-sa
      hostNetwork: true
      nodeSelector:
        workload: desktop
        testing: csi
      containers:
        - name: csi-driver-registrar
          imagePullPolicy: Always
          image: quay.io/k8scsi/driver-registrar:v0.3.0
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
          #  - name: registrar-socket-dir
          #    mountPath: /var/lib/csi/sockets/
        - name: gcp-filestore-driver
          securityContext:
            privileged: true
          imagePullPolicy: Always
          image: gcr.io/google-containers/volume-csi/gcp-filestore-csi-driver:v0.1.0
          args:
            - "--v=5"
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--nodeid=$(KUBE_NODE_NAME)"
            - "--node=true"
          env:
            - name: CSI_ENDPOINT
              value: unix:/csi/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: kubelet-dir
              mountPath: /var/lib/kubelet
              mountPropagation: "Bidirectional"
            - name: plugin-dir
              mountPath: /csi
        - name: nfs-services
          imagePullPolicy: Always
          image: gcr.io/google-containers/volume-csi/gcp-filestore-csi-driver:v0.1.0
          command: ["/nfs_services_start.sh"]
      volumes:
        # TODO(dependency): this will work when kublet registrar functionality exists
        #- name: registrar-socket-dir
        #  hostPath:
        #    path: /var/lib/kubelet/device-plugins/
        #    type: DirectoryOrCreate
        - name: kubelet-dir
          hostPath:
            path: /var/lib/kubelet
            type: Directory
        - name: plugin-dir
          hostPath:
            path: /var/lib/kubelet/plugins/com.google.csi.filestore/
            type: DirectoryOrCreate
